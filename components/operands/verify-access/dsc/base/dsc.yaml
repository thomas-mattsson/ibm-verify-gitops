apiVersion: ibm.com/v1
kind: IBMSecurityVerifyAccess

metadata:
  # The name which will be give to the deployment.
  name: ivia-dsc

spec:
  # The name of the image which will be used in the deployment.
  # https://docs.verify.ibm.com/ibm-security-verify-access/docs/containers#configuration-container
  image: "icr.io/ivia/ivia-dsc:11.0.1.0"

  # The number of pods which will be started for the deployment.
  replicas: 1

  # A boolean flag which indicates whether the deployment should be
  # restarted when a new snapshot is published.
  autoRestart: true

  # A string which is used to indicate the identifier of the snapshot which
  # should be used by the deployment.  If no identifier is specified a default
  # snapshot of 'published' will be used.
  #snapshotId: published

  # An array of strings which indicate the name of fixpacks which should
  # be installed in the deployment.  This corresponds to setting the
  # FIXPACKS environment variable in the deployment itself.
  #
  # fixpacks:
  #   - "test.fixpack"

  # The name of the Verify Identity Access instance which is being deployed.  This value
  # is only used for WRP and DSC deployments and is ignored for Runtime
  # deployments.  
  instance: default

  # The language which will be used for messages which are logged by the
  # deployment.
  language: "en_US.utf8"

  # The list of volumes that can be mounted by containers belonging to
  # the pod.  More info can be found at:
  #     https://kubernetes.io/docs/concepts/storage/volumes
  volumes:
    - name: ivia-config
      persistentVolumeClaim:
        claimName: ivia-config-pvc

  # The list of references to secrets in the same namespace to use for the
  # pulling of the Verify Identity Access image.
  # imagePullSecrets:
  #   - name:my-secret

  # The name of the ServiceAccount to use to run the managed pod.
  serviceAccountName: ivia-anyuid

  # The X509 certificate to verify the connection to the configuration snapshot
  # service. The default value for this property is "operator", which reads the "tls.cert"
  # value from the verify-access-operator secret created in the namespace that the Verify Identity 
  # Access pods are deployed to.
  #snapshotTLSCacert: "operator"

  # The IBM License Metric Tool annotations to add to the runtime container. These annotations a required
  # by IBM to track license useage for the IBM Verify Identity Access product. Administartors have the option
  # of using licence codes for WebSEAL, Advanced Access Cotnrol, Federation or Enterprise; as well as production
  # or non-production (development) licenses. The actual license codes you should deploy will depend on your 
  # licensing agreement with IBM.
  #ilmtAnnotations:
  #  module: webseal
  #  production: false

  # Administarators can optionally set additional annotations to add to deployed Verify Identity Access runtime
  # containers. This may be used for integration with third party applications such as log aggregation 
  # or infrastructure monitoring tools. Character restrictions for custom annotations are the same for
  # any other Kubernets annotation.
  # More info can be found at:
  #     https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set
  #customAnnotations:
  #- key: my.custom/Annotation
  #  value: annotationToAdd


  # The ordered list of secrets used to decrypt configuration snapshot files. This
  # property is required if the configuration snapshot file being used was encrypted
  # when it was created.
  #snapshotSecrets: "secreteToDecryptSnapshotFiles||AnotherSecretToDecryptFiles"

  # Any specific container information which is associated with this
  # container.  The container options include:
  #    env
  #    envFrom
  #    resources
  #    volumeMounts
  #    volumeDevices
  #    livenessProbe
  #    readinessProbe
  #    startupProbe
  #    imagePullPolicy
  #    securityContext
  #
  # Default values will be provided for the probes and security context.
  #
  # More info can be found at:
  #   https://kubernetes.io/docs/tasks/configure-pod-container
  container:
    volumeMounts:
      - mountPath: /var/shared
        name: ivia-config
    env:
      - name: CONFIG_SERVICE_USER_PWD
        valueFrom:
          secretKeyRef:
            name: verify-access-operator
            key: rw.pwd
    #  - name: DEBUG
    #    value: 'true'
